--->>. pod 'SVProgressHUD' <<--

import UIKit
import WebKit
import SVProgressHUD

class WebViewController: UIViewController,WKNavigationDelegate,UIScrollViewDelegate {
    
    var webView : WKWebView!
    
    var strURL = String()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        webView = WKWebView()
        
        DispatchQueue.main.async {
            self.webView.frame = CGRect.init(x: 0, y: 0, width: self.view.frame.size.width, height: self.view.frame.size.height)
            
            self.webView.load(NSURLRequest(url: NSURL(string: self.strURL)! as URL) as URLRequest)
            
            self.webView.allowsBackForwardNavigationGestures = true
            
            self.webView.navigationDelegate = self
            
            self.webView.scrollView.bounces = false
            
            self.webView.isUserInteractionEnabled = true
            self.webView.scrollView.isScrollEnabled = true
            self.webView.scrollView.delegate = self
            
            self.view.addSubview(self.webView)
        }
        
        
        // Do any additional setup after loading the view.
    }
    
    func viewForZooming(in scrollView: UIScrollView) -> UIView? {
        return nil
    }
    
    override func viewWillAppear(_ animated: Bool) {
        self.navigationController?.navigationBar.isHidden = false
        
    }
    
    
    func webView(_ webView: WKWebView, didStartProvisionalNavigation navigation: WKNavigation!) {
        SVProgressHUD.show()
        
    }
    
    func webView(_ webView: WKWebView, didFinish navigation: WKNavigation!) {
        SVProgressHUD.dismiss()
        insertCSSString(into: webView)
    }
    
    func webView(_ webView: WKWebView, didFail navigation: WKNavigation!, withError error: Error) {
        print(error)
        
    }
    
    func insertCSSString(into webView: WKWebView) {
        let jsString = "document.querySelectorAll('*[style]').forEach(el => el.style.overflow = 'scroll');"
        webView.evaluateJavaScript(jsString, completionHandler: nil)
    }
    
}
